---
layout: post
title: 网络安全之越权漏洞
tags: [网络安全, 越权漏洞]
image: '/images/posts/4.jpg'
---

> 背景

之前在写代码的时候，没有特意留意越权问题，直到近期，网络安全的同事向我负责的业务这边提出自己负责的代码存在水平越权，用户信息泄漏的问题。所以，借此机会，好好学习一下越权泄漏的问题。

---

### 什么是越权泄漏？

越权访问（Broken Access Control，简称BAC）是Web应用程序中一种常见的漏洞，由于其存在范围广、危害大，被OWASP列为Web应用十大安全隐患的第二名。

通常情况下，一个 Web 程序功能流程是登录 - 提交请求 - 验证权限 - 数据库查询 - 返回结果。如果验证权限不足，便会导致越权。常见的程序都会认为通过登录后即可验证用户的身份，从而不会做下一步验证，最后导致越权。

越权访问漏洞主要分为水平越权访问和垂直越权访问。

#### 水平越权泄漏

> 水平越权

指相同权限下不同的用户可以互相访问。

> 一般存在的问题是

用户id这些信息从客户端获取，交易id的增删改查不校验所属用户，这些都是些安全漏洞。

>  水平越权测试方法

主要通过看看能否通过A用户操作影响到B用户。

> 通常的解决办法是

用户信息从服务器session中获取，交易id的增删改查校验所属用户。


#### 垂直越权泄漏

> 垂直越权

指使用权限低的用户可以访问到权限较高的用户。

一般发生在权限菜单等信息控制在 客户端或者浏览器，通过模拟参数获取更大权限。

> 垂直越权测试思路

看看低权限用户是否能越权使用高权限用户的功能，比如普通用户可以使用管理员的功能。

> 解决办法

通过责任链的方式 在交易请求进来时对所属交易权限跟session进行对比。

> 防范措施

1. 前后端同时对用户输入信息进行校验，双重验证机制。

2. 调用功能前验证用户是否有权限调用相关功能。

3. 执行关键操作前必须验证用户身份，验证用户是否具备操作数据的权限。

4. 直接对象引用的加密资源ID，防止攻击者枚举ID，敏感数据特殊化处理。

5. 永远不要相信来自用户的输入，对于可控参数进行严格的检查与过滤。

### 参考

1. https://blog.csdn.net/u012068483/article/details/89553797

2. https://www.cnblogs.com/dummersoul/p/13475010.html
