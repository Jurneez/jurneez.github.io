---
layout: post
title: 基础知识之Bitmap
tags: [基础, bitmap]
image: '/images/posts/1.jpg'
---

### 一、什么是bitmap

---

Bitmap，我们拆开来看，bit是计算机中的最小单位，也就是我们常说的二进制中的一位，只能表示一个0或者一个1。map，是一种`key-value`形式的数据存储结构。bitmap也是一种`k-v`形式存储数据的结构，只是，value是bit单位。

Bitmap的基本核心就是用一个bit来标识某个元素的value。一般，bitmap用来表示数据是否存在。

如果我们要用bitmap存储数组【1，3，6，8，9】，数组中最大的数据是9，我们申请9bit连续的内存，其存储如下：
![about](/images/posts/bitmap.png)

0表示数据存在，1表示数据不存在。

### 二、为什么使用Bitmap，而不直接用Map

---

节省内存空间。

比如，java中的int类型占用4个字节（byte，1byte=8bit），假如有10，0000，0000亿int型数据需要处理，这个时候，单纯存储数据就大概需要4G（10，0000，0000 * 4 /1024/1024/1024=4G）。用bitmap表示，我们只需要10亿个bit（10，0000，0000 / 8 / 1024/1024 = 119MB）.

### 三、使用场景

---

> 1. 排序

使用位图法进行元素不重复的正整形数组排序。

遍历一遍，设置状态1，然后再次遍历，对状态等于1的进行输出，参考计数排序的原理。

> 2. 判断是否存在

给定10亿个不重复的正int的整数，没排过序的，然后再给一个数，如何快速判断这个数是否在那10亿个数当中。

遍历40个亿数字，映射到BitMap中，然后对于给出的数，直接判断指定的位上存在不存在即可。

### 参考

---

1. https://www.cnblogs.com/dragonsuc/p/10993938.html

2. https://wizardforcel.gitbooks.io/the-art-of-programming-by-july/content/06.07.html

